# mock
# Autogenerated from man page /usr/share/man/man1/mock.1.gz
complete -c mock -s a -l addrepo -d 'Add this repo baseurl to the yumconfig for the chroot'
complete -c mock -l arch -d 'Calls the Linux personality() syscall to tell the kernel to emulate a seconda…'
complete -c mock -l additional-package -d 'An additional package (on top of in-package specified BuildRequires) to be in…'
complete -c mock -l forcearch -d 'Pass --forcearch to DNF'
complete -c mock -l cache-alterations -d 'Rebuild the root cache after making alterations to the chroot (i. e'
complete -c mock -l cleanup-after -d 'Clean chroot after building.  Use with --resultdir'
complete -c mock -l configdir -d 'Change directory where config files are found'
complete -c mock -l config-opts -d 'Override configuration option.  Can be used multiple times'
complete -c mock -l continue -d 'If a pkg fails to build, continue to the next one, default is to stop'
complete -c mock -l cwd -d 'Change to the specified directory (relative to the chroot) before running com…'
complete -c mock -s D -l define -d 'Specify macro definitions used for the build'
complete -c mock -l disable-plugin -d 'Disable the specified plugin.   This option may be used multiple times'
complete -c mock -l disablerepo -d 'Pass --disablerepo option to package manager to disable a repository'
complete -c mock -l dnf -d 'Use DNF as the current package manager'
complete -c mock -l enable-plugin -d 'Enable the specified plugin.   This option may be used multiple times'
complete -c mock -l enablerepo -d 'Pass --enablerepo option to package manager to enable a repository'
complete -c mock -l enable-network -d 'Enable networking'
complete -c mock -l isolation -d 'What should be used for isolation of chroot'
complete -c mock -l localrepo -d 'Set the path to put the results/repo in (works only in --chain mode)'
complete -c mock -s c -d 'If package fails, continue to the next one (works only in --chain mode)'
complete -c mock -s h -l help -d 'Show usage information and exit'
complete -c mock -l macro-file -d 'Use pre-defined rpm macro file'
complete -c mock -l new-chroot -d 'Deprecated.  Use \\fV--isolation=nspawn'
complete -c mock -s n -l no-clean -d 'Do not clean chroot before building a package'
complete -c mock -l nocheck -d 'Pass --nocheck to rpmbuild to skip \'make check\' tests'
complete -c mock -s N -l no-cleanup-after -d 'Don\'t clean chroot after building'
complete -c mock -l offline -d 'Run in an \'offline\' mode where we tell \'yum\' to run completely from the local…'
complete -c mock -l old-chroot -d 'Deprecated.  Use \\fV--isolation=simple'
complete -c mock -l plugin-option -d 'Set plugin specific parameter.  This option may be used multiple times'
complete -c mock -l postinstall -d 'Try to install built packages in the same buildroot right after the build'
complete -c mock -s q -l quiet -d 'Be quiet'
complete -c mock -l recurse -d 'Build all pkgs, record the failures and try to rebuild them again and again u…'
complete -c mock -s r -l root -d 'Uses specified chroot configuration as defined in ~/. config/mock/<CONFIG>'
complete -c mock -l resultdir -d 'Change directory where resulting files (RPMs and build logs) are written'
complete -c mock -l rootdir -d 'The path for where the chroot should be built'
complete -c mock -l rpmbuild-opts -d 'Pass additional options to rpmbuild'
complete -c mock -l rpmbuild_timeout -d 'Fail build if rpmbuild takes longer than \'timeout\' seconds'
complete -c mock -l scm-option -d 'define an SCM option (may be used more than once)'
complete -c mock -l short-circuit -d 'Use rpmbuild\'s short-circuit mechanism to skip already executed stages of the…'
complete -c mock -l symlink-dereference -d 'Follow symlinks in sources (used only with --buildsrpm)'
complete -c mock -l target -d 'This argument is passed to rpmbuild to specify the target arch to build'
complete -c mock -l tmp_prefix -d 'Tmp dir prefix - will default to username-pid if not specified'
complete -c mock -l trace -d 'Enables verbose tracing of function enter/exit with function arguments and re…'
complete -c mock -l uniqueext -d 'Arbitrary, unique extension to append to chroot directory name'
complete -c mock -l unpriv -d 'Drop privileges before running command when using --chroot'
complete -c mock -s v -l verbose -d 'Output verbose progress information'
complete -c mock -l version -d 'Show version number and exit'
complete -c mock -l with -d 'Enable configure OPTION for the build'
complete -c mock -l without -d 'Disable configure OPTION for the build'
complete -c mock -l yum -d 'Use yum as the current package manager'
complete -c mock -l bootstrap-chroot -d 'build in two stages, using chroot rpm for creating the build chroot'
complete -c mock -l no-bootstrap-chroot -d 'build in a single stage, using system rpm for creating the build chroot'
complete -c mock -l use-bootstrap-image -d 'Instead of creating a bootstrap chroot from scrath, use podman image specifie…'

