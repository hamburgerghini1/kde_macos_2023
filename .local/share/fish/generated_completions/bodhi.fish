# bodhi
# Autogenerated from man page /usr/share/man/man1/bodhi.1.gz
complete -c bodhi -l client-id -d 'Use the provided OpenID Connect client_id instead of the default one'
complete -c bodhi -l debug -d 'Some commands accept this flag to show extra debug information'
complete -c bodhi -l help -d 'Show help text and exit'
complete -c bodhi -l id-provider -d 'Use the OpenID Connect provider at the given URL instead of the default server'
complete -c bodhi -l staging -d 'Use the staging bodhi instance instead of the production instance'
complete -c bodhi -l url -d 'Use the Bodhi server at the given URL instead of the default server'
complete -c bodhi -l version -d 'Show version and exit.  Not accepted by subcommands.  COMMANDS'
complete -c bodhi -s v -l verbose -d 'Print more detail about the composes'
complete -c bodhi -l mine -d 'Show only your overrides'
complete -c bodhi -l active -d 'Filter for only active overrides'
complete -c bodhi -l expired -d 'Filter for only expired overrides'
complete -c bodhi -l packages -d 'Query for overrides related to the given packages, given as a comma-separated…'
complete -c bodhi -l releases -d 'Query for overrides related to a list of releases, given as a comma-separated…'
complete -c bodhi -l builds -d 'Query for overrides for a list of builds, given as a comma-separated list'
complete -c bodhi -l user -d 'Filter for overrides by a list of usernames, given as a comma-separated list'
complete -c bodhi -l rows -d 'Limits number of results shown per page'
complete -c bodhi -l page -d 'Go to page number'
complete -c bodhi -l duration -d 'The number of days the override should exist, given as an integer'
complete -c bodhi -l notes -d 'Notes on why this override is in place'
complete -c bodhi -l expire -d 'Force an override to the expired state.  UPDATES'
complete -c bodhi -l karma -s 1 -d 'The karma value you wish to contribute to the update'
complete -c bodhi -l debuginfo -d 'Include debuginfo packages when downloading'
complete -c bodhi -l updateid -d 'A comma-separated list of update IDs you would like to download'
complete -c bodhi -l arch -d 'You can specify an architecture of packages to download'
complete -c bodhi -l type -d 'The type of the new update'
complete -c bodhi -l notes-file -d 'A path to a file containing a description of the update'
complete -c bodhi -l bugs -d 'A comma separated list of bugs to associate with this update'
complete -c bodhi -l close-bugs -l no-close-bugs -d 'If given, this flag will cause bodhi to close the referenced bugs automatical…'
complete -c bodhi -l request -d 'The repository requested for this update'
complete -c bodhi -l autokarma -l no-autokarma -d 'Enable or disable autokarma for this update'
complete -c bodhi -l autotime -l no-autotime -d 'Enable autotime for this update'
complete -c bodhi -l stable-karma -d 'Configure the stable karma threshold for the given value'
complete -c bodhi -l unstable-karma -d 'Configure the unstable karma threshold for the given value'
complete -c bodhi -l stable-days -d 'Configure the number of days an update has to spend in testing before being a…'
complete -c bodhi -l suggest -d 'Suggest that the user logout or reboot upon applying the update'
complete -c bodhi -l file -d 'A path to a file containing all the update details'
complete -c bodhi -l requirements -d 'A comma or space-separated list of required Taskotron tasks that must pass fo…'
complete -c bodhi -l display-name -d 'The name of the update'
complete -c bodhi -l from-tag -d 'If this flag is provided, <builds_or_tag> will be interpreted as a Koji tag a…'
complete -c bodhi -l addbuilds -d 'Add a comma separated list of build nvr to this update'
complete -c bodhi -l removebuilds -d 'Remove a comma separated list of build nvr from this update'
complete -c bodhi -l title -d 'Query for the update given by title'
complete -c bodhi -l alias -d 'Query for the update given by alias'
complete -c bodhi -l approved-since -d 'Query for updates approved after the given timestamp'
complete -c bodhi -l approved-before -d 'Query for updates approved before the given timestamp'
complete -c bodhi -l modified-since -d 'Query for updates modified after the given timestamp'
complete -c bodhi -l modified-before -d 'Query for updates modified before the given timestamp'
complete -c bodhi -l content-type -d 'Query for updates of a given content type: either rpm, module, or (in the fut…'
complete -c bodhi -l critpath -d 'Query for updates submitted for the critical path'
complete -c bodhi -l from-side-tag -d 'Query for updates created from a side-tag'
complete -c bodhi -l not-from-side-tag -d 'Query for updates not created from a side-tag'
complete -c bodhi -l gating -d 'Query for updates based on test gating status'
complete -c bodhi -l pushed -d 'Query for updates that have been pushed'
complete -c bodhi -l pushed-since -d 'Query for updates that have been pushed after the given timestamp'
complete -c bodhi -l pushed-before -d 'Query for updates that have been pushed before the given timestamp'
complete -c bodhi -l locked -d 'Query for updates that are currently locked'
complete -c bodhi -l severity -d 'Query for updates with a specific severity'
complete -c bodhi -l submitted-since -d 'Query for updates that were submitted since the given timestamp'
complete -c bodhi -l submitted-before -d 'Query for updates that were submitted before the given timestamp'
complete -c bodhi -l status -d 'Filter by status'
complete -c bodhi -l show -d 'List the unsatisfied test requirements'
complete -c bodhi -l test -d 'Waive the test specified by name in TEXT'
complete -c bodhi -l branch -d 'The git branch that corresponds to this release (e. g. , f29)'
complete -c bodhi -l candidate-tag -d 'The Koji tag to use to search for update candidates (e. g'
complete -c bodhi -l composed-by-bodhi -l not-composed-by-bodhi -d 'The flag that indicates whether the release is composed by Bodhi or not'
complete -c bodhi -l dist-tag -d 'The Koji dist tag for this release (e. g. , f29)'
complete -c bodhi -l id-prefix -d 'The release\'s prefix (e. g. , FEDORA)'
complete -c bodhi -l long-name -d 'The long name of the release (e. g. , Fedora 29)'
complete -c bodhi -l name -d 'The name of the release (e. g. , F29)'
complete -c bodhi -l override-tag -d 'The Koji tag to use for buildroot overrides (e. g. , f29-override)'
complete -c bodhi -l package-manager -d 'The package manager used by this release'
complete -c bodhi -l pending-stable-tag -d 'The Koji tag to use on updates that are marked stable (e. g'
complete -c bodhi -l pending-testing-tag -d 'The Koji tag to use on updates that are pending testing (e. g'
complete -c bodhi -l stable-tag -d 'The Koji tag to use for stable updates (e. g. , f29-updates)'
complete -c bodhi -l state -d 'The state of the release'
complete -c bodhi -l testing-repository -d 'The name of the testing repository used to test updates.  Not required'
complete -c bodhi -l testing-tag -d 'The Koji tag to use for testing updates (e. g. , f29-updates-testing)'
complete -c bodhi -l new-name -d 'Change the release\'s name to a new value (e. g. , F29)'
complete -c bodhi -l display-archived -d 'Display full list, including archived releases'

